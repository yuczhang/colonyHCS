% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colony_edge.R
\name{colony_edge}
\alias{colony_edge}
\title{Edge detection to segment the forground of the microoganism colonies.}
\usage{
colony_edge(expr_mode = "Congo_red", colony_patch, color_patch = NULL,
  Canny_sigma = 7, low_thr = 6, high_thr = 20, mor_size = 9,
  mor_shape = "disc", high_connectivity = TRUE)
}
\arguments{
\item{expr_mode}{a string indicates the phenotypic experiment type, as different experiments require differnt
processing steps}

\item{colony_patch}{a matrix specifies the intensity value of a colony patch,whose value is normalized into [0,1]}

\item{color_patch}{An 'Image' object or an array of specifies a colony patch in Color mode,or the same as the colony_patch for some
phenotypic experiment that does not focus on color change}

\item{Canny_sigma}{A numeric specifies the Gaussian filter variance in Canny detector.Defaults to 7 in the
examples.}

\item{low_thr}{lower threshold value of the Canny detector.}

\item{high_thr}{upper threshold value of the Canny detector.}

\item{mor_size}{A numeric containing the size of the brush in pixels. This should be an odd number; even numbers
are rounded to the next odd one, i.e., size = 4 has the same effect as size = 5. Default is 9.}

\item{mor_shape}{A character vector indicating the shape of the brush. Can be box, disc, diamond, Gaussian or line. Default is disc.}

\item{high_connectivity}{A logic 4(false)- or 8(true)-connectivity in 2d case, and between 6(false)- or 26(true)-connectivity in 3d case.
Default is TRUE.}
}
\value{
A list contains 1) An array containing labelled objects. Labelled objects are pixel sets with the same unique integer value.
         2) An array, containing the painted version of a certain colony.
}
\description{
In order to characterize the phenotypic change of mutant, the Canny edge detection algotithm is applied to realzie the segmentation.
}
\examples{
edge_rslt<-colony_edge(expr_mode="swarming",colony_patch=img_patch$patch[[i,j]],color_patch=img_patch$color_patch[[i,j]],
                       Canny_sigma=8,low_thr=6,high_thr=20,mor_size=9)
}
